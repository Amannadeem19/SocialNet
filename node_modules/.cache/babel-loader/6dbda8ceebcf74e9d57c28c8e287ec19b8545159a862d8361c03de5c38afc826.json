{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\BloodApp\\\\client\\\\src\\\\Pages\\\\Donate.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Donate() {\n  _s();\n  const [bankNameList, setBankNameList] = useState([]);\n  const [bankName, setBankName] = useState({\n    bankName: ''\n  });\n  function getBank() {\n    axios.get('http://localhost:3001/api/Donation/donate', {\n      headers: {\n        accessToken2: sessionStorage.getItem('accessToken2')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log('error in donate');\n        toast.error(response.data.error);\n      } else {\n        console.log(response.data);\n        setBankNameList(response.data);\n        // toast.success(response.data)\n      }\n    });\n  }\n\n  const handleChange = event => {\n    // const newdata = {...bankName}\n    // newdata[event.target.id] = event.target.value\n    // setBankName(newdata)\n    // console.log(newdata);\n\n    setBankName(event.target.value);\n  };\n  function Submit(event) {\n    event.preventDefault();\n\n    // add the submit api\n    axios.post('http://localhost:3001/api/Donation/postdonate', {\n      bankName: bankName\n    }, {\n      headers: {\n        accessToken2: sessionStorage.getItem('accessToken2')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        toast.error(response.data.error);\n      } else {\n        console.log('donate success');\n      }\n    });\n  }\n\n  // function ends\n  useEffect(() => {\n    getBank();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose Blood Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: bankName,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose Blood Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this), bankNameList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: val.BankName,\n          id: key + 1,\n          children: [\" \", val.BankName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n\n  // useEffect(()=>{\n  //     getBanks()\n  // }, [])\n\n  // const handleChange = (event)=>{\n  //     // const newdata = {...bankName}\n  //     // newdata[event.target.id] = event.target.value\n  //     // setBankName(newdata)\n  //     // console.log(newdata);\n\n  //             setBankName(event.target.value)\n\n  // }\n  // function Submit(event){\n  //     event.preventDefault()\n\n  //     // add the submit api\n  //     axios.post('http://localhost:3001/api/Donation/postdonate',{\n  //         bankName: bankName,\n  //     },{\n  //         headers:{\n  //             accessToken2: sessionStorage.getItem('accessToken2'),\n  //         }\n  //     }).then((response)=>{\n  //         if(response.data.error){\n  //             toast.error(response.data.error)\n  //         }else{\n  //             console.log('donate success');\n  //         }\n  //     })\n\n  // }\n  //     return ( \n\n  //     <div>\n  //         <form onSubmit={(e)=>{Submit(e)}}>\n  //     <h1>Choose Blood Bank</h1>\n  //     <select value={bankName} onChange={handleChange}>\n  //         <option value=\"\" >Choose Blood Bank</option>\n\n  //         {\n  //             //   <option>{C2}</option>\n  //            bankNameList.map((val, key)=>{\n  //             return(\n  //             <option value={val.BankName} id={key+1}> {val.BankName}</option>\n  //             )\n  //            })\n  //         }\n\n  //     </select>\n  //     <button type=\"submit\">Submit</button>\n  //     </form>\n  //     </div>\n\n  //     )\n}\n_s(Donate, \"zmhdSpkqQSfOqoveHu3JUPNW/Ao=\");\n_c = Donate;\nexport default Donate;\nvar _c;\n$RefreshReg$(_c, \"Donate\");","map":{"version":3,"names":["axios","React","useEffect","useState","useHistory","toast","Formik","Form","Field","ErrorMessage","Yup","Donate","bankNameList","setBankNameList","bankName","setBankName","getBank","get","headers","accessToken2","sessionStorage","getItem","then","response","data","error","console","log","handleChange","event","target","value","Submit","preventDefault","post","map","val","key","BankName"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/BloodApp/client/src/Pages/Donate.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, {useEffect, useState, useHistory} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nfunction Donate(){\r\n    \r\n    const[bankNameList, setBankNameList] = useState([])\r\n    const[bankName, setBankName] = useState({\r\n        bankName: '',\r\n\r\n    })\r\n\r\n\r\n   \r\n        function getBank(){\r\n       \r\n        axios.get('http://localhost:3001/api/Donation/donate', {\r\n            headers:{\r\n                accessToken2: sessionStorage.getItem('accessToken2'),\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.error){\r\n                console.log('error in donate');\r\n                toast.error(response.data.error)\r\n            }else{\r\n                console.log(response.data);\r\n                setBankNameList(response.data)\r\n                // toast.success(response.data)\r\n            }\r\n            \r\n        })\r\n       \r\n    }\r\n\r\nconst handleChange = (event)=>{\r\n    // const newdata = {...bankName}\r\n    // newdata[event.target.id] = event.target.value\r\n    // setBankName(newdata)\r\n    // console.log(newdata);\r\n\r\n            setBankName(event.target.value)\r\n\r\n}\r\nfunction Submit(event){\r\n    event.preventDefault()\r\n  \r\n    \r\n    // add the submit api\r\n    axios.post('http://localhost:3001/api/Donation/postdonate',{\r\n        bankName: bankName,\r\n    },{\r\n        headers:{\r\n            accessToken2: sessionStorage.getItem('accessToken2'),\r\n        }\r\n    }).then((response)=>{\r\n        if(response.data.error){\r\n            toast.error(response.data.error)\r\n        }else{\r\n            console.log('donate success');\r\n        }\r\n    })\r\n    \r\n    \r\n}\r\n\r\n     // function ends\r\n    useEffect(()=>{\r\n\r\n        getBank()\r\n    },[])\r\n    return (\r\n        <form >\r\n                <h1>Choose Blood Bank</h1>\r\n                <select value={bankName}>\r\n                 <option value=\"\" >Choose Blood Bank</option>\r\n                { \r\n                        bankNameList.map((val, key)=>{\r\n                        return(\r\n                            <option value={val.BankName} id={key+1}> {val.BankName}</option>\r\n                                )\r\n                            }\r\n                            )\r\n                    }\r\n                               \r\n            </select>\r\n           <button type=\"submit\">Submit</button>\r\n                    </form>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n   \r\n\r\n// useEffect(()=>{\r\n//     getBanks()\r\n// }, [])\r\n\r\n// const handleChange = (event)=>{\r\n//     // const newdata = {...bankName}\r\n//     // newdata[event.target.id] = event.target.value\r\n//     // setBankName(newdata)\r\n//     // console.log(newdata);\r\n\r\n//             setBankName(event.target.value)\r\n\r\n// }\r\n// function Submit(event){\r\n//     event.preventDefault()\r\n  \r\n    \r\n//     // add the submit api\r\n//     axios.post('http://localhost:3001/api/Donation/postdonate',{\r\n//         bankName: bankName,\r\n//     },{\r\n//         headers:{\r\n//             accessToken2: sessionStorage.getItem('accessToken2'),\r\n//         }\r\n//     }).then((response)=>{\r\n//         if(response.data.error){\r\n//             toast.error(response.data.error)\r\n//         }else{\r\n//             console.log('donate success');\r\n//         }\r\n//     })\r\n    \r\n    \r\n// }\r\n//     return ( \r\n       \r\n//     <div>\r\n//         <form onSubmit={(e)=>{Submit(e)}}>\r\n//     <h1>Choose Blood Bank</h1>\r\n//     <select value={bankName} onChange={handleChange}>\r\n//         <option value=\"\" >Choose Blood Bank</option>\r\n\r\n//         {\r\n//             //   <option>{C2}</option>\r\n//            bankNameList.map((val, key)=>{\r\n//             return(\r\n//             <option value={val.BankName} id={key+1}> {val.BankName}</option>\r\n//             )\r\n//            })\r\n//         }\r\n       \r\n//     </select>\r\n//     <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//     </div>\r\n    \r\n//     )\r\n\r\n}\r\n\r\nexport default Donate;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}