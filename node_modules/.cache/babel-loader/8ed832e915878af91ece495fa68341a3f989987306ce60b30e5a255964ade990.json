{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\BloodApp\\\\client\\\\src\\\\Pages\\\\CreateRequest.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateRequest() {\n  const initialValues = {\n    // cnic:\"\",\n    bloodGroup: \"\",\n    QtyNeed: \"\",\n    // Date : \"\",\n    // Time : \"\",\n    Reason: \"\",\n    TimePeriod: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    // cnic : Yup.number().required('The cnic is required'),\n    bloodGroup: Yup.string().required('The blood group is required'),\n    QtyNeed: Yup.number().required('The qty is required'),\n    // Date : Yup.string().required('The date is required'),\n    // .max(new Date(), 'You cant be be born in a future'),\n    // Time: Yup.string().required('the time is required'),\n    TimePeriod: Yup.number().required('The time period is required'),\n    Reason: Yup.string().min(10).required('The reason is required')\n  });\n  // {cnic : cnic, bloodGroup: bloodGroup, QtyNeed: QtyNeed, Date : Date, Time : Time, TimePeriod : TimePeriod, Reason : Reason \n  const onSubmit = data => {\n    axios.post('http://localhost:3001/api/Request/create', data, {\n      headers: {\n        accessToken2: sessionStorage.getItem('accessToken2')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        toast.error('Request is not submitted');\n      } else {\n        console.log(data);\n        toast.success('Post is submitted successfully');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage2\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"head\",\n          children: \"Post Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Blood Group:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"bloodGroup\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"bloodGroup\",\n          placeholder: \"eg: A+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Qty Need:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"QtyNeed\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"QtyNeed\",\n          placeholder: \"eg: 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Time Period:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"TimePeriod\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"TimePeriod\",\n          placeholder: \"eg: 1 day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reason:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"Reason\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost1\",\n          className: \"post\",\n          name: \"Reason\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c = CreateRequest;\nexport default CreateRequest;\nvar _c;\n$RefreshReg$(_c, \"CreateRequest\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","moment","toast","CreateRequest","initialValues","bloodGroup","QtyNeed","Reason","TimePeriod","validationSchema","object","shape","string","required","number","min","onSubmit","data","post","headers","accessToken2","sessionStorage","getItem","then","response","error","console","log","success"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/BloodApp/client/src/Pages/CreateRequest.js"],"sourcesContent":["import React from \"react\";\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport { toast } from \"react-toastify\";\r\nfunction CreateRequest (){\r\n\r\n    const initialValues = {\r\n        // cnic:\"\",\r\n        bloodGroup:\"\",\r\n        QtyNeed:\"\",\r\n        // Date : \"\",\r\n        // Time : \"\",\r\n        Reason:\"\",\r\n        TimePeriod:\"\",\r\n    \r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        // cnic : Yup.number().required('The cnic is required'),\r\n        bloodGroup: Yup.string().required('The blood group is required'),\r\n        QtyNeed: Yup.number().required('The qty is required'),\r\n        // Date : Yup.string().required('The date is required'),\r\n        // .max(new Date(), 'You cant be be born in a future'),\r\n        // Time: Yup.string().required('the time is required'),\r\n        TimePeriod : Yup.number().required('The time period is required'),\r\n        Reason: Yup.string().min(10).required('The reason is required'),\r\n    });\r\n    // {cnic : cnic, bloodGroup: bloodGroup, QtyNeed: QtyNeed, Date : Date, Time : Time, TimePeriod : TimePeriod, Reason : Reason \r\n    const onSubmit = (data)=>{\r\n        axios.post('http://localhost:3001/api/Request/create', data,{\r\n            headers:{\r\n                accessToken2 : sessionStorage.getItem('accessToken2'),\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.error){\r\n                toast.error('Request is not submitted')\r\n            }else{\r\n            console.log(data);\r\n            toast.success('Post is submitted successfully')\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        \r\n        <div className=\"createPostPage2\">\r\n           \r\n\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n\r\n        <Form className=\"formContainer2\">\r\n        <h1 id=\"head\">Post Request</h1> \r\n       \r\n        <label>Blood Group:</label>\r\n        <ErrorMessage name=\"bloodGroup\" component=\"span\"/>\r\n        <Field autoComplete = \"off\" id=\"inputCreatePost\" name=\"bloodGroup\" placeholder=\"eg: A+\"/>\r\n        \r\n        <label>Qty Need:</label>\r\n        <ErrorMessage name=\"QtyNeed\" component=\"span\"/>\r\n        <Field autoComplete = \"off\" id=\"inputCreatePost\" name=\"QtyNeed\" placeholder=\"eg: 1\" />\r\n        \r\n        {/* <label>Date:</label>\r\n        <ErrorMessage name=\"Date\" component=\"span\"/>\r\n        <Field autoComplete = \"off\" id=\"inputCreatePost\" name=\"Date\" placeholder=\"eg: A+\"/>\r\n\r\n         */}\r\n        {/* <label>Time:</label>\r\n        <ErrorMessage name=\"Time\" component=\"span\"/>\r\n        <Field autoComplete = \"off\" id=\"inputCreatePost\" name=\"Time\" placeholder=\"eg: A+\"/> */}\r\n\r\n        <label>Time Period:</label>\r\n        <ErrorMessage name=\"TimePeriod\" component=\"span\"/>\r\n        <Field autoComplete = \"off\" id=\"inputCreatePost\" name=\"TimePeriod\" placeholder=\"eg: 1 day\"/>\r\n\r\n\r\n        <label>Reason:</label>\r\n        <ErrorMessage name=\"Reason\" component=\"span\"/>\r\n        <Field autoComplete = \"off\" id=\"inputCreatePost1\" className=\"post\" name=\"Reason\"/>\r\n\r\n        <button type=\"submit\">Post</button>\r\n\r\n\r\n\r\n\r\n        </Form>\r\n\r\n        </Formik>\r\n\r\n        </div> \r\n    );\r\n    \r\n}\r\nexport default CreateRequest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}