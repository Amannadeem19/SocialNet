{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\BloodApp\\\\client\\\\src\\\\Pages\\\\Register.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  const initialValues = {\n    BankName: \"\",\n    password: \"\",\n    openingTimings: \"\",\n    closingTimings: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    BankName: Yup.string().min(3).max(30).required('The blood bank name is required'),\n    password: Yup.string().min(10).required('The password is required'),\n    openingTimings: Yup.string().required('The opening timing is required'),\n    closingTimings: Yup.string().min(10).required('The closing timing is required')\n  });\n  const onSubmit = data => {\n    axios.post(\"localhost:5000/api/authBank/register\", data).then(response => {\n      console.log(data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bank Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"BankName\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"BankName\",\n          placeholder: \"eg: Agha Khan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"password\",\n          placeholder: \"eg: @!#@aman \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Opening Timings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"openingTimings\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"openingTimings\",\n          placeholder: \"eg: 8:00:00am \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Closing Timings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"closingTimings\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          classname: \"post\",\n          name: \"closingTimings\",\n          placeholder: \"eg: 12:00:00pm \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","Register","initialValues","BankName","password","openingTimings","closingTimings","validationSchema","object","shape","string","min","max","required","onSubmit","data","post","then","response","console","log"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/BloodApp/client/src/Pages/Register.js"],"sourcesContent":["import React from \"react\";\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios  from \"axios\";\r\n\r\nfunction Register (){\r\n\r\n    const initialValues = {\r\n        BankName:\"\",\r\n        password:\"\",\r\n        openingTimings:\"\",\r\n        closingTimings:\"\"\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        BankName: Yup.string().min(3).max(30).required('The blood bank name is required'),\r\n        password: Yup.string().min(10).required('The password is required'),\r\n        openingTimings : Yup.string().required('The opening timing is required'),\r\n        closingTimings: Yup.string().min(10).required('The closing timing is required'),\r\n    });\r\n    const onSubmit = (data)=>{\r\n        axios.post(\"localhost:5000/api/authBank/register\", data).then((response)=>{\r\n            console.log(data);\r\n        })\r\n    }\r\n\r\n    return ( \r\n    \r\n    \r\n    <div>\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n\r\n    <Form className=\"formContainer\">\r\n   \r\n    <label>Bank Name:</label>\r\n    <ErrorMessage name=\"BankName\" component=\"span\"/>\r\n    <Field autocomplete = \"off\" id=\"inputCreatePost\" name=\"BankName\" placeholder=\"eg: Agha Khan\"/>\r\n    \r\n    <label>Password:</label>\r\n    <ErrorMessage name=\"password\" component=\"span\"/>\r\n    <Field autocomplete = \"off\" id=\"inputCreatePost\" name=\"password\" placeholder=\"eg: @!#@aman \"/>\r\n\r\n    <label>Opening Timings:</label>\r\n    <ErrorMessage name=\"openingTimings\" component=\"span\"/>\r\n    <Field autocomplete = \"off\" id=\"inputCreatePost\" name=\"openingTimings\" placeholder=\"eg: 8:00:00am \"/>\r\n\r\n\r\n    <label>Closing Timings:</label>\r\n    <ErrorMessage name=\"closingTimings\" component=\"span\"/>\r\n    <Field autocomplete = \"off\" id=\"inputCreatePost\" classname=\"post\" name=\"closingTimings\" placeholder=\"eg: 12:00:00pm \"/>\r\n\r\n    <button type=\"submit\">Register</button>\r\n\r\n\r\n\r\n\r\n    </Form>\r\n\r\n    </Formik>\r\n    \r\n    </div>\r\n    \r\n    \r\n    );\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}