{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\BloodApp\\\\client\\\\src\\\\components\\\\Donate\\\\Donate.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Donate() {\n  _s();\n  const [bankNameList, setBankNameList] = useState([]);\n  const [dataset, setData] = useState(\"\");\n  const [blood, setblood] = useState(\"\");\n  const [req, setReq] = useState(\"\");\n  function getBank() {\n    axios.get('http://localhost:3001/api/Donation/donate', {\n      headers: {\n        accessToken2: sessionStorage.getItem('accessToken2')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log('error in donate');\n        toast.error(response.data.error);\n      } else {\n        console.log(response.data);\n        setBankNameList(response.data);\n        // toast.success(response.data)\n      }\n    });\n  }\n\n  const handleChange = event => {\n    setData(event.target.value);\n  };\n  // const handleChange2 = (event) => {\n  //     setReq(event.target.value)\n  // }\n  // const handleChange3 = (event) => {\n  //     setblood(event.target.value)\n  // }\n  function Submit(event) {\n    event.preventDefault();\n    // add the submit api\n    axios.post('http://localhost:3001/api/Donation/postdonate', {\n      bankName: dataset,\n      req_id: req,\n      bloodGroup: blood\n    }, {\n      headers: {\n        accessToken2: sessionStorage.getItem('accessToken2')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(response.data.error);\n      }\n      if (response.data.req_error) {\n        console.log(response.data.req_error);\n      } else if (response.data) {\n        console.log('donate success');\n      }\n    });\n  }\n\n  // function ends\n  useEffect(() => {\n    getBank();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose Blood Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: dataset.bankName,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose Blood Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }, this), bankNameList.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: val.BankName,\n          children: [\" \", val.BankName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Donate, \"8xc0m8MuE+Iz/fdB1kZaJswToNE=\");\n_c = Donate;\nexport default Donate;\nvar _c;\n$RefreshReg$(_c, \"Donate\");","map":{"version":3,"names":["axios","React","useEffect","useState","toast","Formik","Form","Field","ErrorMessage","Yup","Donate","bankNameList","setBankNameList","dataset","setData","blood","setblood","req","setReq","getBank","get","headers","accessToken2","sessionStorage","getItem","then","response","data","error","console","log","handleChange","event","target","value","Submit","preventDefault","post","bankName","req_id","bloodGroup","req_error","map","val","key","BankName"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/BloodApp/client/src/components/Donate/Donate.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n\r\nfunction Donate(){\r\n    \r\n    const[bankNameList, setBankNameList] = useState([])\r\n    const[dataset, setData] = useState(\"\")\r\n    const[blood, setblood] = useState(\"\")\r\n    const [req, setReq] = useState(\"\")\r\n \r\n\r\n\r\n   \r\n        function getBank(){\r\n       \r\n        axios.get('http://localhost:3001/api/Donation/donate', {\r\n            headers:{\r\n                accessToken2: sessionStorage.getItem('accessToken2'),\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.error){\r\n                console.log('error in donate');\r\n                toast.error(response.data.error)\r\n            }else{\r\n                console.log(response.data);\r\n                setBankNameList(response.data)\r\n                // toast.success(response.data)\r\n            }\r\n            \r\n        })\r\n       \r\n    }\r\n\r\nconst handleChange = (event)=>{\r\n           \r\n       setData(event.target.value)\r\n\r\n}\r\n// const handleChange2 = (event) => {\r\n//     setReq(event.target.value)\r\n// }\r\n// const handleChange3 = (event) => {\r\n//     setblood(event.target.value)\r\n// }\r\nfunction Submit(event){\r\n    event.preventDefault();\r\n    // add the submit api\r\n    axios.post('http://localhost:3001/api/Donation/postdonate',{\r\n        bankName: dataset,\r\n        req_id : req,\r\n        bloodGroup: blood,\r\n    },{\r\n        headers:{\r\n            accessToken2: sessionStorage.getItem('accessToken2'),\r\n        }\r\n    }).then((response)=>{\r\n        if(response.data.error){\r\n            console.log(response.data.error);\r\n        }if(response.data.req_error){\r\n            console.log(response.data.req_error);\r\n        }\r\n        else if(response.data){\r\n            console.log('donate success');\r\n            \r\n        }\r\n    })\r\n    \r\n    \r\n}\r\n\r\n     // function ends\r\n    useEffect(()=>{\r\n\r\n        getBank()\r\n    },[])\r\n    return (\r\n        <div>\r\n                <h1>Choose Blood Bank</h1>\r\n                <select value={dataset.bankName} onChange={handleChange}>\r\n                 <option value=\"\" >Choose Blood Bank</option>\r\n                { \r\n                    bankNameList.map((val, key)=>{\r\n                    return(\r\n                        <option value={val.BankName} > {val.BankName}</option>\r\n                    )\r\n                    }\r\n                    )\r\n                }                        \r\n            </select>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Donate;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}