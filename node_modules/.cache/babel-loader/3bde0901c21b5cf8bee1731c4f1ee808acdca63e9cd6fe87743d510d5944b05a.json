{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\OneDrive\\\\Documents\\\\WEB DEVELOPMENT\\\\BloodApp\\\\client\\\\src\\\\Pages\\\\Donate.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState, useHistory } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Donate() {\n  _s();\n  const [bankNameList, setBankNameList] = useState([]);\n  const [requestList, setRequestList] = useState([]);\n  let history = useHistory();\n  const [bankName, setBankName] = useState({\n    bankName: ''\n  });\n  const showRequest = () => {\n    axios.get('http://localhost:3001/api/Request/requests', {\n      headers: {\n        accessToken: sessionStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        toast.error('You are not authenticated to use this feature');\n      } else {\n        setRequestList(response.data);\n      }\n    });\n  };\n  const getBanks = () => {\n    axios.get('http://localhost:3001/api/Donation/donate', {\n      headers: {\n        accessToken2: sessionStorage.getItem('accessToken2')\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log('error in donate');\n        toast.error(response.data.error);\n      } else {\n        console.log(response.data);\n        setBankNameList(response.data);\n        // toast.success(response.data)\n      }\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Choose Blood Bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: bankName,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose Blood Bank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this),\n          //   <option>{C2}</option>\n          bankNameList.map((val, key) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: val.BankName,\n              id: key + 1,\n              children: [\" \", val.BankName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }; // function ends\n  useEffect(() => {\n    showRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Blood Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reqbtn\",\n        onClick: showRequest,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Find\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), requestList.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requests\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Cnic : \", val.cnic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"reqid\",\n              children: [\"Requirement id: \", val.req_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Blood Group: \", val.bloodGroup]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Quantity Needed: \", val.Qtyneed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Posted At: \", val.Date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Time: \", val.Time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Reason: \", val.Reason]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Time Period : \", val.TimePeriod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"btn-del\",\n            onClick: getBanks,\n            children: \"Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n\n  // useEffect(()=>{\n  //     getBanks()\n  // }, [])\n\n  // const handleChange = (event)=>{\n  //     // const newdata = {...bankName}\n  //     // newdata[event.target.id] = event.target.value\n  //     // setBankName(newdata)\n  //     // console.log(newdata);\n\n  //             setBankName(event.target.value)\n\n  // }\n  // function Submit(event){\n  //     event.preventDefault()\n\n  //     // add the submit api\n  //     axios.post('http://localhost:3001/api/Donation/postdonate',{\n  //         bankName: bankName,\n  //     },{\n  //         headers:{\n  //             accessToken2: sessionStorage.getItem('accessToken2'),\n  //         }\n  //     }).then((response)=>{\n  //         if(response.data.error){\n  //             toast.error(response.data.error)\n  //         }else{\n  //             console.log('donate success');\n  //         }\n  //     })\n\n  // }\n  //     return ( \n\n  //     <div>\n  //         <form onSubmit={(e)=>{Submit(e)}}>\n  //     <h1>Choose Blood Bank</h1>\n  //     <select value={bankName} onChange={handleChange}>\n  //         <option value=\"\" >Choose Blood Bank</option>\n\n  //         {\n  //             //   <option>{C2}</option>\n  //            bankNameList.map((val, key)=>{\n  //             return(\n  //             <option value={val.BankName} id={key+1}> {val.BankName}</option>\n  //             )\n  //            })\n  //         }\n\n  //     </select>\n  //     <button type=\"submit\">Submit</button>\n  //     </form>\n  //     </div>\n\n  //     )\n}\n_s(Donate, \"m18TIhLHO2U+7MPNi+DmP3qzyNI=\", false, function () {\n  return [useHistory];\n});\n_c = Donate;\nexport default Donate;\nvar _c;\n$RefreshReg$(_c, \"Donate\");","map":{"version":3,"names":["axios","React","useEffect","useState","useHistory","toast","Formik","Form","Field","ErrorMessage","Yup","Donate","bankNameList","setBankNameList","requestList","setRequestList","history","bankName","setBankName","showRequest","get","headers","accessToken","sessionStorage","getItem","then","response","data","error","getBanks","accessToken2","console","log","map","val","key","BankName","cnic","req_id","bloodGroup","Qtyneed","Date","Time","Reason","TimePeriod"],"sources":["C:/Users/Toshiba/OneDrive/Documents/WEB DEVELOPMENT/BloodApp/client/src/Pages/Donate.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, {useEffect, useState, useHistory} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nfunction Donate(){\r\n    \r\n    const[bankNameList, setBankNameList] = useState([])\r\n      const [requestList, setRequestList] = useState([])\r\n      let history = useHistory()\r\n\r\n \r\n    const[bankName, setBankName] = useState({\r\n        bankName: '',\r\n\r\n    })\r\n\r\n    const showRequest = ()=>{\r\n        axios.get('http://localhost:3001/api/Request/requests', {\r\n            headers:{\r\n                accessToken : sessionStorage.getItem(\"accessToken\"),\r\n            }\r\n        }).then((response)=>{\r\n            if(response.data.error){\r\n                toast.error('You are not authenticated to use this feature')\r\n                \r\n            }else{\r\n            \r\n           setRequestList(response.data);\r\n        }\r\n        })\r\n    }\r\n        const getBanks = ()=>{\r\n       \r\n    axios.get('http://localhost:3001/api/Donation/donate', {\r\n        headers:{\r\n            accessToken2: sessionStorage.getItem('accessToken2'),\r\n        }\r\n    }).then((response)=>{\r\n        if(response.data.error){\r\n            console.log('error in donate');\r\n            toast.error(response.data.error)\r\n        }else{\r\n            console.log(response.data);\r\n            setBankNameList(response.data)\r\n            // toast.success(response.data)\r\n        }\r\n        \r\n    })\r\n    return(\r\n            <div>\r\n                {/* onSubmit={(e)=>{Submit(e)}} */}\r\n                {/* onChange={handleChange} */}\r\n        <form >\r\n    <h1>Choose Blood Bank</h1>\r\n    <select value={bankName}>\r\n        <option value=\"\" >Choose Blood Bank</option>\r\n\r\n        {\r\n            //   <option>{C2}</option>\r\n           bankNameList.map((val, key)=>{\r\n            return(\r\n            <option value={val.BankName} id={key+1}> {val.BankName}</option>\r\n            )\r\n           })\r\n        }\r\n       \r\n    </select>\r\n    <button type=\"submit\">Submit</button>\r\n    </form>\r\n    </div>\r\n\r\n\r\n    );\r\n}// function ends\r\n    useEffect(()=>{\r\n        showRequest()\r\n    },[])\r\n    return (\r\n\r\n        <div>\r\n            <div id=\"main1\">\r\n            <div id=\"heading\">\r\n                <h1 >Blood Requests</h1>\r\n            </div>\r\n            <button id=\"reqbtn\" onClick={showRequest}><h3>Find</h3></button>\r\n            \r\n            </div>\r\n        {\r\n            requestList.map((val,key)=>{\r\n                return (\r\n                    \r\n                    <div className=\"requests\">\r\n                        \r\n                        <div>\r\n                            <div className=\"main\">\r\n                            <h1>Cnic : {val.cnic}</h1>\r\n                            <h1 id=\"reqid\">Requirement id: {val.req_id}</h1>\r\n                            \r\n                            </div>\r\n                            <h3>Blood Group: {val.bloodGroup}</h3>\r\n                            <h3>Quantity Needed: {val.Qtyneed}</h3>\r\n                            <h3>Posted At: {val.Date}</h3>\r\n                            <h3>Time: {val.Time}</h3>\r\n                            <h3>Reason: {val.Reason}</h3>\r\n                            <h3>Time Period : {val.TimePeriod}</h3>\r\n                            <button id=\"btn-del\" onClick={getBanks}>Donate</button>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n       \r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n   \r\n\r\n// useEffect(()=>{\r\n//     getBanks()\r\n// }, [])\r\n\r\n// const handleChange = (event)=>{\r\n//     // const newdata = {...bankName}\r\n//     // newdata[event.target.id] = event.target.value\r\n//     // setBankName(newdata)\r\n//     // console.log(newdata);\r\n\r\n//             setBankName(event.target.value)\r\n\r\n// }\r\n// function Submit(event){\r\n//     event.preventDefault()\r\n  \r\n    \r\n//     // add the submit api\r\n//     axios.post('http://localhost:3001/api/Donation/postdonate',{\r\n//         bankName: bankName,\r\n//     },{\r\n//         headers:{\r\n//             accessToken2: sessionStorage.getItem('accessToken2'),\r\n//         }\r\n//     }).then((response)=>{\r\n//         if(response.data.error){\r\n//             toast.error(response.data.error)\r\n//         }else{\r\n//             console.log('donate success');\r\n//         }\r\n//     })\r\n    \r\n    \r\n// }\r\n//     return ( \r\n       \r\n//     <div>\r\n//         <form onSubmit={(e)=>{Submit(e)}}>\r\n//     <h1>Choose Blood Bank</h1>\r\n//     <select value={bankName} onChange={handleChange}>\r\n//         <option value=\"\" >Choose Blood Bank</option>\r\n\r\n//         {\r\n//             //   <option>{C2}</option>\r\n//            bankNameList.map((val, key)=>{\r\n//             return(\r\n//             <option value={val.BankName} id={key+1}> {val.BankName}</option>\r\n//             )\r\n//            })\r\n//         }\r\n       \r\n//     </select>\r\n//     <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//     </div>\r\n    \r\n//     )\r\n\r\n}\r\n\r\nexport default Donate;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}